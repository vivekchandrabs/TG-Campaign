{"remainingRequest":"C:\\vivek\\code\\SpeckbitBot\\speckbot_bot_frontend\\tg-camp\\node_modules\\babel-loader\\lib\\index.js!C:\\vivek\\code\\SpeckbitBot\\speckbot_bot_frontend\\tg-camp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\vivek\\code\\SpeckbitBot\\speckbot_bot_frontend\\tg-camp\\src\\stores\\modules\\SpeckbitBot.js","dependencies":[{"path":"C:\\vivek\\code\\SpeckbitBot\\speckbot_bot_frontend\\tg-camp\\src\\stores\\modules\\SpeckbitBot.js","mtime":1576667678275},{"path":"C:\\vivek\\code\\SpeckbitBot\\speckbot_bot_frontend\\tg-camp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\vivek\\code\\SpeckbitBot\\speckbot_bot_frontend\\tg-camp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\vivek\\code\\SpeckbitBot\\speckbot_bot_frontend\\tg-camp\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from \"axios\"; // var SITE_PREFIX = \"http://127.0.0.1:8000/bot\"\n// var LOGIN_SITE_PREFIX = \"http://127.0.0.1:8000/api-token-auth/\"\n\nvar SITE_PREFIX = \"https://tg-camp.herokuapp.com/bot\";\nvar LOGIN_SITE_PREFIX = \"https://tg-camp.herokuapp.com/api-token-auth/\";\nvar state = {\n  AllSeries: [],\n  Series: {},\n  AllMessages: []\n};\nvar getters = {\n  AllSeries: function AllSeries(state) {\n    return state.AllSeries;\n  },\n  Series: function Series(state) {\n    return state.Series;\n  },\n  AllMessages: function AllMessages(state) {\n    return state.AllMessages;\n  }\n};\nvar actions = {\n  login_user: function login_user(store, signin_json_data) {\n    return new Promise(function (resolve, reject) {\n      axios.post(LOGIN_SITE_PREFIX, signin_json_data).then(function (res) {\n        return resolve(res.data);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    });\n  },\n  signup_user: function signup_user(store, signup_json_data) {\n    return new Promise(function (resolve, reject) {\n      axios.post(SITE_PREFIX + \"/signup/\", signup_json_data).then(function (res) {\n        return resolve(res.data);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    });\n  },\n  getAllSeries: function getAllSeries(store) {\n    return new Promise(function (resolve, reject) {\n      console.log(window.localStorage['token']);\n      var auth = {\n        headers: {\n          Authorization: \"Token \" + window.localStorage[\"token\"]\n        }\n      };\n      axios.get(SITE_PREFIX + \"/series/\", auth).then(function (res) {\n        return resolve(res.data);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  createNewSeries: function createNewSeries(store, json_data) {\n    return new Promise(function (resolve, reject) {\n      var auth = {\n        headers: {\n          Authorization: \"Token \" + window.localStorage[\"token\"]\n        }\n      };\n      axios.post(SITE_PREFIX + \"/series/\", json_data, auth).then(function (res) {\n        return resolve(res.data);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  fetchSeries: function fetchSeries(store, series_id) {\n    return new Promise(function (resolve, reject) {\n      var auth = {\n        headers: {\n          Authorization: \"Token \" + window.localStorage[\"token\"]\n        }\n      };\n      axios.get(SITE_PREFIX + \"/series/\" + series_id + \"/\", auth).then(function (res) {\n        return resolve(res.data);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  editPeriodicSchedule: function editPeriodicSchedule(store, json_data) {\n    return new Promise(function (resolve, reject) {\n      var auth = {\n        headers: {\n          Authorization: \"Token \" + window.localStorage[\"token\"]\n        }\n      };\n      axios.patch(SITE_PREFIX + \"/series/\" + json_data[\"series_id\"] + \"/\", {\n        \"periodic_schedule\": json_data[\"periodic_schedule\"]\n      }, auth).then(function (res) {\n        return resolve(res.data);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  editInterval: function editInterval(store, json_data) {\n    return new Promise(function (resolve, reject) {\n      var auth = {\n        headers: {\n          Authorization: \"Token \" + window.localStorage[\"token\"]\n        }\n      };\n      axios.patch(SITE_PREFIX + \"/series/\" + json_data[\"series_id\"] + \"/\", {\n        \"interval\": json_data[\"interval\"]\n      }, auth).then(function (res) {\n        return resolve(res.data);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  editPost: function editPost(store, json_data) {\n    return new Promise(function (resolve, reject) {\n      var auth = {\n        headers: {\n          Authorization: \"Token \" + window.localStorage[\"token\"]\n        }\n      };\n      axios.patch(SITE_PREFIX + \"/post/\" + json_data[\"id\"] + \"/\", json_data, auth).then(function (res) {\n        return resolve(res.data);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  createNewPost: function createNewPost(store, json_data) {\n    return new Promise(function (resolve, reject) {\n      var auth = {\n        headers: {\n          Authorization: \"Token \" + window.localStorage[\"token\"]\n        }\n      };\n      axios.post(SITE_PREFIX + \"/post/\", {\n        \"post\": json_data\n      }, auth).then(function (res) {\n        return resolve(res.data);\n      }).catch(function (err) {\n        return reject(err);\n      }); // var series = state.AllSeries\n      // console.log(series)\n      // var filtered_series = series.filter(series => series.id == json_data[\"series_id\"])[0]\n      // var item_index = series.indexOf(filtered_series)\n      // console.log(item_index)\n      // console.log(\"here\")\n      // series[item_index].no_of_post += 1\n      // console.log(series[item_index])\n    });\n  },\n  editSeries: function editSeries(store, json_data) {\n    return new Promise(function (resolve, reject) {\n      axios.defaults.headers.common[\"Authorization\"] = \"Token \" + window.localStorage[\"token\"];\n      console.log(json_data);\n      axios.patch(SITE_PREFIX + \"/series/\".concat(json_data[\"series\"][\"series_id\"], \"/\"), json_data);\n    });\n  },\n  deletePost: function deletePost(store, json_data) {\n    return new Promise(function (resolve, reject) {\n      axios.defaults.headers.common[\"Authorization\"] = \"Token \" + window.localStorage[\"token\"];\n      axios.delete(SITE_PREFIX + \"/post/\".concat(json_data[\"post_id\"], \"/?series_id=\").concat(json_data[\"series_id\"])).then(function (res) {\n        return resolve(res.data);\n      }).catch(function (err) {\n        return reject(err);\n      }); // var series = state.AllSeries\n      // console.log(series)\n      // var filtered_series = series.filter(series => series.id == json_data[\"series_id\"])[0]\n      // var item_index = series.indexOf(filtered_series)\n      // console.log(item_index)\n      // series[item_index].no_of_post -= 1\n      // console.log(series[item_index])\n    });\n  },\n  sendMessage: function sendMessage(store, json_data) {\n    return new Promise(function (resolve, reject) {\n      axios.defaults.headers.common[\"Authorization\"] = \"Token \" + window.localStorage[\"token\"];\n      console.log(json_data);\n      axios.post(SITE_PREFIX + \"/custom-message/\", json_data).then(function (res) {\n        return console.log(\"sent\");\n      });\n    });\n  },\n  changeSeriesStatus: function changeSeriesStatus(store, json_data) {\n    return new Promise(function (resolve, reject) {\n      axios.defaults.headers.common[\"Authorization\"] = \"Token \" + window.localStorage[\"token\"];\n      axios.patch(SITE_PREFIX + \"/series/\".concat(json_data[\"series_id\"], \"/\"), json_data).then(function (res) {\n        return console.log(\"sent\");\n      });\n    });\n  },\n  fetchAllMessages: function fetchAllMessages(store, series_id) {\n    return new Promise(function (resolve, reject) {\n      axios.defaults.headers.common[\"Authorization\"] = \"Token \" + window.localStorage[\"token\"];\n      axios.get(SITE_PREFIX + \"/custom-message/?series_id=\".concat(series_id)).then(function (res) {\n        return resolve(res.data);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  }\n};\nvar mutations = {\n  commitAllSeries: function commitAllSeries(state, all_series_data) {\n    return state.AllSeries = all_series_data;\n  },\n  commitSeries: function commitSeries(state, series) {\n    return state.Series = series;\n  },\n  commitAllMessages: function commitAllMessages(state, allMessages) {\n    return state.AllMessages = allMessages;\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["C:\\vivek\\code\\SpeckbitBot\\speckbot_bot_frontend\\tg-camp\\src\\stores\\modules\\SpeckbitBot.js"],"names":["axios","SITE_PREFIX","LOGIN_SITE_PREFIX","state","AllSeries","Series","AllMessages","getters","actions","login_user","store","signin_json_data","Promise","resolve","reject","post","then","res","data","catch","err","console","log","signup_user","signup_json_data","getAllSeries","window","localStorage","auth","headers","Authorization","get","createNewSeries","json_data","fetchSeries","series_id","editPeriodicSchedule","patch","editInterval","editPost","createNewPost","editSeries","defaults","common","deletePost","delete","sendMessage","changeSeriesStatus","fetchAllMessages","mutations","commitAllSeries","all_series_data","commitSeries","series","commitAllMessages","allMessages"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\n// var SITE_PREFIX = \"http://127.0.0.1:8000/bot\"\r\n// var LOGIN_SITE_PREFIX = \"http://127.0.0.1:8000/api-token-auth/\"\r\n\r\nvar SITE_PREFIX = \"https://tg-camp.herokuapp.com/bot\"\r\nvar LOGIN_SITE_PREFIX = \"https://tg-camp.herokuapp.com/api-token-auth/\"\r\n\r\nconst state = {\r\n    AllSeries : [],\r\n    Series: {},\r\n    AllMessages: []\r\n}\r\n\r\nconst getters = {\r\n    AllSeries: state => state.AllSeries,\r\n    Series: state => state.Series,\r\n    AllMessages: state => state.AllMessages\r\n}\r\n\r\nconst actions = {\r\n    login_user: (store, signin_json_data) => new Promise((resolve, reject) =>{\r\n        axios.post(LOGIN_SITE_PREFIX, signin_json_data)\r\n        .then(res => resolve(res.data))\r\n        .catch(err => console.log(err))\r\n    }),\r\n     signup_user: (store, signup_json_data) => new Promise((resolve, reject) => {\r\n         axios.post(SITE_PREFIX+\"/signup/\", signup_json_data)\r\n         .then(res => resolve(res.data))\r\n         .catch(err => console.log(err))\r\n     }),\r\n     getAllSeries: (store) => new Promise((resolve, reject) => {\r\n       console.log(window.localStorage['token'])\r\n        const auth = {\r\n            headers: {\r\n              Authorization: \"Token \" + window.localStorage[\"token\"]\r\n            }\r\n          };\r\n         axios.get(SITE_PREFIX+\"/series/\", auth)\r\n         .then(res => resolve(res.data))\r\n         .catch(err => reject(err))\r\n     }),\r\n\r\n     createNewSeries: (store, json_data) => new Promise((resolve, reject) => {\r\n        const auth = {\r\n            headers: {\r\n              Authorization: \"Token \" + window.localStorage[\"token\"]\r\n            }\r\n          };\r\n          axios.post(SITE_PREFIX+\"/series/\", json_data, auth)\r\n         .then(res => resolve(res.data))\r\n         .catch(err => reject(err))\r\n     }),\r\n\r\n     fetchSeries: (store, series_id) => new Promise((resolve, reject) => {\r\n        const auth = {\r\n            headers: {\r\n              Authorization: \"Token \" + window.localStorage[\"token\"]\r\n            }\r\n          };\r\n          axios.get(SITE_PREFIX+\"/series/\"+series_id+\"/\", auth)\r\n          .then(res => resolve(res.data))\r\n          .catch(err => reject(err))\r\n     }),\r\n\r\n     editPeriodicSchedule: (store, json_data) => new Promise((resolve, reject) => {\r\n        const auth = {\r\n            headers: {\r\n              Authorization: \"Token \" + window.localStorage[\"token\"]\r\n            }\r\n          };\r\n          axios.patch(SITE_PREFIX+\"/series/\"+json_data[\"series_id\"]+\"/\", {\r\n              \"periodic_schedule\":json_data[\"periodic_schedule\"]\r\n          }, auth)\r\n          .then(res => resolve(res.data))\r\n          .catch(err => reject(err))\r\n     }),\r\n\r\n     editInterval: (store, json_data) => new Promise((resolve, reject) =>{\r\n        const auth = {\r\n            headers: {\r\n              Authorization: \"Token \" + window.localStorage[\"token\"]\r\n            }\r\n          };\r\n          axios.patch(SITE_PREFIX+\"/series/\"+json_data[\"series_id\"]+\"/\", {\r\n            \"interval\":json_data[\"interval\"]\r\n        }, auth)\r\n        .then(res => resolve(res.data))\r\n        .catch(err => reject(err))\r\n     }),\r\n\r\n     editPost: (store, json_data) => new Promise((resolve, reject) => {\r\n        const auth = {\r\n            headers: {\r\n              Authorization: \"Token \" + window.localStorage[\"token\"]\r\n            }\r\n          };\r\n          axios.patch(SITE_PREFIX+\"/post/\"+json_data[\"id\"]+\"/\", json_data, auth)\r\n        .then(res => resolve(res.data))\r\n        .catch(err => reject(err))\r\n     }),\r\n\r\n     createNewPost: (store, json_data) => new Promise((resolve, reject) => {\r\n        const auth = {\r\n            headers: {\r\n              Authorization: \"Token \" + window.localStorage[\"token\"]\r\n            }\r\n          };\r\n          axios.post(SITE_PREFIX+\"/post/\", {\r\n              \"post\":json_data\r\n          }, auth)\r\n          .then(res => resolve(res.data))\r\n          .catch(err => reject(err))\r\n          // var series = state.AllSeries\r\n          // console.log(series)\r\n          // var filtered_series = series.filter(series => series.id == json_data[\"series_id\"])[0]\r\n          // var item_index = series.indexOf(filtered_series)\r\n          // console.log(item_index)\r\n          // console.log(\"here\")\r\n          // series[item_index].no_of_post += 1\r\n          // console.log(series[item_index])\r\n     }),\r\n\r\n     editSeries: (store, json_data) => new Promise((resolve, reject) => {\r\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + window.localStorage[\"token\"]\r\n        console.log(json_data)\r\n        axios.patch(SITE_PREFIX+`/series/${json_data[\"series\"][\"series_id\"]}/`, json_data)}),\r\n\r\n\r\n     deletePost: (store, json_data) => new Promise((resolve, reject) => {\r\n          axios.defaults.headers.common[\"Authorization\"] = \"Token \" + window.localStorage[\"token\"]\r\n          axios.delete(SITE_PREFIX+`/post/${json_data[\"post_id\"]}/?series_id=${json_data[\"series_id\"]}`)\r\n            .then(res => resolve(res.data))\r\n            .catch(err => reject(err))\r\n            // var series = state.AllSeries\r\n            // console.log(series)\r\n            // var filtered_series = series.filter(series => series.id == json_data[\"series_id\"])[0]\r\n            // var item_index = series.indexOf(filtered_series)\r\n            // console.log(item_index)\r\n            // series[item_index].no_of_post -= 1\r\n            // console.log(series[item_index])\r\n     }),\r\n     \r\n     sendMessage: (store, json_data) => new Promise((resolve, reject) => {\r\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + window.localStorage[\"token\"]\r\n        console.log(json_data)\r\n        axios.post(SITE_PREFIX+\"/custom-message/\", json_data)\r\n        .then(res => console.log(\"sent\"))\r\n    }),\r\n\r\n    changeSeriesStatus :(store, json_data) => new Promise((resolve, reject) => {\r\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + window.localStorage[\"token\"]\r\n        axios.patch(SITE_PREFIX+`/series/${json_data[\"series_id\"]}/`, json_data)\r\n        .then(res => console.log(\"sent\"))\r\n    }),\r\n\r\n    fetchAllMessages: (store, series_id) => new Promise((resolve, reject) => {\r\n      axios.defaults.headers.common[\"Authorization\"] = \"Token \" + window.localStorage[\"token\"]\r\n      axios.get(SITE_PREFIX+`/custom-message/?series_id=${series_id}`)\r\n      .then(res => resolve(res.data))\r\n      .catch(err => reject(err))\r\n    })\r\n    \r\n}\r\n\r\nconst mutations = {\r\n    commitAllSeries : (state, all_series_data) => (state.AllSeries = all_series_data),\r\n    commitSeries: (state, series) => (state.Series = series),\r\n    commitAllMessages: (state, allMessages) => (state.AllMessages = allMessages)\r\n}\r\n\r\nexport default {\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n};"]}]}